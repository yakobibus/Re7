// UI_distribution_randomizer.h

# ifndef UI_DISTRIBUTION_RANDOMIZER_H
  # define UI_DISTRIBUTION_RANDOMIZER_H       (1)
  //
  # include <random>
  # include <iostream>
  
  namespace ui_dist_rand {
    class UI_Distributed_Rand {  // uniform_int_distribution randomizer
    public :
      UI_Distributed_Rand (int lowerBound, int upperBound) ;
      UI_Distributed_Rand (const UI_Distributed_Rand& uid) ;
      UI_Distributed_Rand& operator = (const UI_Distributed_Rand& uid) ;
      //
      int random (void) ;
    private :
      int _lowerBound;
      int _upperBound;
      std::random_device rd;  //Will be used to obtain a seed for the random number engine
      std::mt19937 gen ; // //Standard mersenne_twister_engine seeded with rd()
      std::uniform_int_distribution<> dis ; // //Used to transform the random unsigned int generated by gen into an int in an interval [i, k]
    } ;
  }

# endif // UI_DISTRIBUTION_RANDOMIZER_H
